{"version":3,"sources":["components/StepperComponent.js","components/MiniDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getStepContent","step","StepperComponent","classes","React","useState","activeStep","setActiveStep","steps","className","Stepper","orientation","map","label","index","Step","StepLabel","StepContent","Typography","length","Paper","square","elevation","Button","onClick","drawerWidth","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","paper","textAlign","color","palette","text","secondary","handleClick","event","preventDefault","console","info","MiniDrawer","useTheme","open","setOpen","sideOptionsArray","icon","HomeIcon","AssessmentIcon","CalendarViewDayIcon","SettingsIcon","HelpIcon","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","src","alt","height","style","borderRadius","Box","Drawer","variant","direction","Divider","List","Icon","Tooltip","title","ListItem","ListItemIcon","margin","fontSize","ListItemText","primary","Breadcrumbs","Link","href","Grid","container","item","xs","flexDirection","TextField","id","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c11f9c2.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"Name your project\",\n    \"Select your land parcel\",\n    \"Select service provisions\",\n    \"Select your project team \",\n    \"Review & confirm\",\n  ];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return ``;\n    case 1:\n      return \"\";\n    case 2:\n      return ``;\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function StepperComponent() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                {/* <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                  </Button>\n                </div> */}\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Box } from \"@material-ui/core\";\nimport \"./MiniDrawerStyle.css\";\nimport StepperComponent from \"./StepperComponent\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction handleClick(event) {\n  event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const sideOptionsArray = [\n    {\n      label: \"Dashboard\",\n      icon: HomeIcon,\n    },\n    {\n      label: \"Project Summary\",\n      icon: AssessmentIcon,\n    },\n    {\n      label: \"Calender\",\n      icon: CalendarViewDayIcon,\n    },\n    {\n      label: \"Setting\",\n      icon: SettingsIcon,\n    },\n    {\n      label: \"Help\",\n      icon: HelpIcon,\n    },\n  ];\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <img\n            src=\"/logo1.jpeg\"\n            alt=\"My logo\"\n            width=\"50px\"\n            height=\"50px\"\n            style={{ borderRadius: \"50px\" }}\n          />\n          <Box className=\"title\">\n            <Typography>Pizza Delivery</Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {sideOptionsArray.map(({ label, icon: Icon }, index) => (\n            <Tooltip title={label}>\n              <ListItem button key={label}>\n                <ListItemIcon\n                  style={{\n                    margin: \"1rem 0 1rem 0\",\n                  }}\n                >\n                  <Icon style={{ fontSize: 40 }} />\n                </ListItemIcon>\n                <ListItemText primary={label} />\n              </ListItem>\n            </Tooltip>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Box>\n          <Breadcrumbs aria-label=\"breadcrumb\">\n            <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\n              Home\n            </Link>\n            <Link\n              color=\"inherit\"\n              href=\"/getting-started/installation/\"\n              onClick={handleClick}\n            >\n              <Typography color=\"textPrimary\">Create Project</Typography>\n            </Link>\n          </Breadcrumbs>\n        </Box>\n        <div>\n          <Grid container spacing={0}>\n            <Grid item xs={3}>\n              <Paper className={classes.paper}>\n                <StepperComponent />\n              </Paper>\n            </Grid>\n            <Grid item xs={4}>\n              <Paper className={classes.paper}>Image</Paper>\n            </Grid>\n            <Grid item xs={4}>\n              <Paper className={classes.paper}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"54vh\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <div>Name your project</div>\n                    <TextField\n                      id=\"outlined-basic\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                    />\n                  </div>\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport MiniDrawer from \"./components/MiniDrawer\";\n\nfunction App() {\n  return (\n    <div>\n      <MiniDrawer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}